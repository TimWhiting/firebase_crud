library firebase_crud_generator;

import 'dart:async';

import 'package:analyzer/dart/element/element.dart';
import 'package:firebase_crud/firebase_crud.dart';
import 'package:build/build.dart';
import 'package:source_gen/source_gen.dart';
import 'src/firebase_crud_generator_base.dart';

class FirebaseCRUDGenerator extends GeneratorForAnnotation<FirebaseCRUD> {
  // Allow creating via `const` as well as enforces immutability here.
  const FirebaseCRUDGenerator();

  @override
  String generateForAnnotatedElement(Element element, ConstantReader annotation, BuildStep buildStep) {
    assert(element is ClassElement);
    final collection = annotation.read('collection').stringValue;
    final copyID = annotation.read('copyID').boolValue;
    final className = element.displayName;
    final getters = (element as ClassElement).accessors;

    var buffer = StringBuffer();

    buffer.writeln(r'''
    /// ********* DOC GENERATED BY Firebase CRUD LIBRARY **********
    /// This is the generated extension methods that will let you perform crud operations on your classes
    /// *************************************************************
    ''');
    writeCRUDMethods(getters, copyID, collection, className, buffer);

    return '''
     // This code is autogenerated for you by the firebase_crud package
     // For all inquiry, please contact the author: Tim Whiting <tim.a.whiting@gmail.com>
     // *****************************************************************************
    
    
     ${buffer.toString()}
     
     ''';
  }
}
